(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[25],{

/***/ "7vAb":
/*!*************************************************!*\
  !*** ./src/ui/desktop/clientMini/ClientMini.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = __webpack_require__(/*! react */ \"q1tI\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _Libs = __webpack_require__(/*! ../../../utils/Libs.js */ \"aKSJ\");\n\nvar _Libs2 = _interopRequireDefault(_Libs);\n\nvar _ClientMini = __webpack_require__(/*! ./ClientMini.jsx */ \"V2wY\");\n\nvar _ClientMini2 = _interopRequireDefault(_ClientMini);\n\n__webpack_require__(/*! ./ClientMini.scss */ \"DnZx\");\n\nvar _MiniSiteService = __webpack_require__(/*! ../../../services/MiniSiteService */ \"G1ib\");\n\nvar _MiniSiteService2 = _interopRequireDefault(_MiniSiteService);\n\nvar _lodashEs = __webpack_require__(/*! lodash-es */ \"T89o\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar moment = __webpack_require__(/*! moment */ \"wd/R\");\n\nvar ClientMini = function (_React$Component) {\n  _inherits(ClientMini, _React$Component);\n\n  function ClientMini(props, context) {\n    _classCallCheck(this, ClientMini);\n\n    var _this = _possibleConstructorReturn(this, (ClientMini.__proto__ || Object.getPrototypeOf(ClientMini)).call(this, props, context));\n\n    _this.jsxTemplate = _ClientMini2.default;\n    var queryParams = !_Libs2.default.isBlank(_this.props.baseParam) && !_Libs2.default.isObjectEmpty(_this.props.baseParam.match.params) ? _this.props.baseParam.match.params : {};\n    _this.state = {\n      curItem: {\n        id: !_Libs2.default.isObjectEmpty(queryParams) ? queryParams.id : null,\n        current_time: _Libs2.default.getCurrentMMDDYYYYHI(),\n        end_date: _Libs2.default.getCurrentMMDDYYYYHI(),\n        start_date: _Libs2.default.getCurrentMMDDYYYYHI()\n      },\n      paramsFilter: {\n        filterBy: 'day'\n      },\n\n      dataEnergy: [],\n      titleEnergy: \"\",\n      xAxisTitle: null,\n      dataCategories: [],\n      dataIrradiance: [],\n      dataPower: [],\n      ourImpact: 2,\n      showNextBtn: false,\n      chartOption: {},\n      dataList: [{ id: 1 }, { id: 2 }, { id: 3 }, { id: 4 }, { id: 5 }, { id: 6 }, { id: 6 }, { id: 7 }, { id: 8 }, { id: 9 }, { id: 10 }],\n      dataFilter: [{ id: 1, text: \"Name\" }, { id: 2, text: \"Alerts\" }, { id: 3, text: \"DC Capacity\" }, { id: 4, text: \"Power\" }, { id: 5, text: \"Irradiance\" }, { id: 6, text: \"Energy Today\" }, { id: 7, text: \"Energy Lifetime\" }, { id: 8, text: \"EER Last Month\" }, { id: 9, text: \"EER This Month\" }]\n    };\n\n    _this.param = {\n      index: 1,\n      offset: 0,\n      limit: Constants.COMMON.PER_PAGE\n    };\n\n    _this.pagging = {\n      total: 10,\n      current: 1\n    };\n    return _this;\n  }\n\n  _createClass(ClientMini, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var date = new Date(),\n          y = date.getFullYear(),\n          m = date.getMonth(),\n          d = date.getDate();\n      var curItem = this.state.curItem;\n      curItem.current_date = new Date(y, m, d, 0, 0, 0);\n      var height = document.getElementById('operating_container').clientHeight;\n      this.setState({ height: height, curItem: curItem });\n      this.loadChartOption();\n      this.getMiniSiteInfo();\n      this.getChartInverterPerformance();\n    }\n\n    /**\n     * Get detail site\n     * @author long.pham 2020-10-30\n     * @param id_site, id_customer\n     * @return Object\n     */\n\n  }, {\n    key: 'getMiniSiteInfo',\n    value: function getMiniSiteInfo() {\n      var self = this,\n          curItem = this.state.curItem;\n      var params = (0, _lodashEs.cloneDeep)(this.state.curItem);\n      params.end_date = _Libs2.default.convertAllFormatDate(params.end_date);\n      params.offset_timezone = _Libs2.default.getOffsetTimeZone(params.end_date);\n      params.format_sql_long = curItem.format_sql_long;\n      params.format_sql_short = curItem.format_sql_short;\n      params.format_sql_string_long = curItem.format_sql_string_long;\n      params.format_sql_string_short = curItem.format_sql_string_short;\n      params.format_sql_string_mdy = curItem.format_sql_string_mdy;\n\n      _MiniSiteService2.default.instance.getMiniSiteInfo(params, function (data) {\n        if (data) {\n          curItem = Object.assign({}, data, curItem);\n          self.setState({\n            curItem: curItem\n          });\n        }\n      });\n    }\n\n    /**\n    * Get mini site inverter performance\n    * @author long.pham 2020-10-04\n    * @param id_site\n    * @return Object\n    */\n\n  }, {\n    key: 'getChartInverterPerformance',\n    value: function getChartInverterPerformance() {\n      var self = this;\n      var curItem = this.state.curItem,\n          paramsFilter = this.state.paramsFilter;\n      paramsFilter.id = curItem.id;\n      paramsFilter.start_date = _Libs2.default.convertAllFormatDate(_Libs2.default.dateFormat(curItem.start_date, \"MM/DD/YYYY\", \"MM/DD/YYYY\") + \" 00:00:00\");\n      // paramsFilter.start_date = \"2020-11-02 00:00:00\";\n      if (_Libs2.default.dateFormat(curItem.current_time, \"MM/DD/YYYY\", \"MM/DD/YYYY\") == _Libs2.default.dateFormat(curItem.end_date, \"MM/DD/YYYY\", \"MM/DD/YYYY\")) {\n        paramsFilter.end_date = _Libs2.default.convertAllFormatDate(curItem.end_date); // '2020-11-01 23:59:59';\n      } else {\n        paramsFilter.end_date = _Libs2.default.convertAllFormatDate(_Libs2.default.dateFormat(curItem.end_date, \"MM/DD/YYYY\", \"MM/DD/YYYY\") + \" 23:59:59\");\n      }\n      paramsFilter.offset_timezone = _Libs2.default.getOffsetTimeZone(curItem.end_date);\n\n      _MiniSiteService2.default.instance.getChartInverterPerformance(paramsFilter, function (data) {\n        if (!_Libs2.default.isObjectEmpty(data)) {\n\n          var dataIrradiance = [],\n              dataPower = [],\n              dataEnergy = [],\n              categories = [],\n              titleEnergy = \"\",\n              xAxisTitle = null;\n          switch (paramsFilter.filterBy) {\n            case \"threeDay\":\n              if (_Libs2.default.isArrayData(data.irradiance)) {\n                var dataListIrradiance = data.irradiance;\n                for (var j = 0; j < dataListIrradiance.length; j++) {\n                  if (j == 0) {\n                    xAxisTitle = dataListIrradiance[j].xAxisTitle;\n                  }\n                  var itemArr = [Date.parse(dataListIrradiance[j].string_time + \" UTC\"), dataListIrradiance[j].sensor1_data < 0 ? 0 : dataListIrradiance[j].sensor1_data];\n                  dataIrradiance.push(itemArr);\n                }\n              }\n\n              if (_Libs2.default.isArrayData(data.energy)) {\n                var dataListThreeDayEnergy = data.energy;\n                for (var k = 0; k < dataListThreeDayEnergy.length; k++) {\n                  if (k == 0) {\n                    titleEnergy = dataListThreeDayEnergy[k].devicename;\n                  } else {\n                    if (dataListThreeDayEnergy[k].ytd_kwh_total <= 0 || dataListThreeDayEnergy[k - 1].ytd_kwh_total <= 0) {\n                      dataEnergy.push([Date.parse(dataListThreeDayEnergy[k].string_time + \" UTC\"), 0]);\n                    } else {\n                      var energy = dataListThreeDayEnergy[k].ytd_kwh_total - dataListThreeDayEnergy[k - 1].ytd_kwh_total < 0 ? 0 : _Libs2.default.round(dataListThreeDayEnergy[k].ytd_kwh_total - dataListThreeDayEnergy[k - 1].ytd_kwh_total, 2);\n                      dataEnergy.push([Date.parse(dataListThreeDayEnergy[k].string_time + \" UTC\"), energy]);\n                    }\n                    //ac_power \n                    var itemArrPower = [Date.parse(dataListThreeDayEnergy[k].string_time + \" UTC\"), dataListThreeDayEnergy[k].ac_power < 0 ? 0 : dataListThreeDayEnergy[k].ac_power];\n                    dataPower.push(itemArrPower);\n                  }\n                }\n              }\n\n              break;\n            case \"month\":\n              if (_Libs2.default.isArrayData(data.energy)) {\n                var dataListMonth = data.energy;\n                for (var m = 0; m < dataListMonth.length; m++) {\n                  if (m == 0) {\n                    titleEnergy = dataListMonth[m].devicename;xAxisTitle = dataListMonth[m].xAxisTitle;\n                  }\n                  categories.push(dataListMonth[m].convert_time);\n                  // Energy\n                  dataEnergy.push([dataListMonth[m].full_time, dataListMonth[m].energy_month_kw]);\n                  // Power\n                  dataPower.push([dataListMonth[m].full_time, dataListMonth[m].avg_ac_power]);\n                  // Irradiance\n                  dataIrradiance.push([dataListMonth[m].full_time, dataListMonth[m].avg_month_sensor1_data]);\n                }\n              }\n\n              break;\n            case \"year\":\n              if (_Libs2.default.isArrayData(data.energy)) {\n                var dataListYear = data.energy;\n                for (var n = 0; n < dataListYear.length; n++) {\n                  if (n == 0) {\n                    titleEnergy = dataListYear[n].devicename;xAxisTitle = dataListYear[n].xAxisTitle;\n                  }\n                  categories.push(dataListYear[n].convert_time);\n                  // Energy\n                  dataEnergy.push([dataListYear[n].full_time, dataListYear[n].energy_month_kw]);\n                  // Power\n                  dataPower.push([dataListYear[n].full_time, dataListYear[n].avg_ac_power]);\n                  // Irradiance\n                  dataIrradiance.push([dataListYear[n].full_time, dataListYear[n].avg_month_sensor1_data]);\n                }\n              }\n              break;\n            case \"lifetime\":\n              if (_Libs2.default.isArrayData(data.energy)) {\n                var dataListLifetime = data.energy;\n                for (var h = 0; h < dataListLifetime.length; h++) {\n                  if (h == 0) {\n                    titleEnergy = dataListLifetime[h].devicename;xAxisTitle = dataListLifetime[h].xAxisTitle;\n                  }\n                  categories.push(dataListLifetime[h].convert_time);\n                  // Energy\n                  dataEnergy.push([dataListLifetime[h].full_time, dataListLifetime[h].energy_month_kw]);\n                  // Power\n                  dataPower.push([dataListLifetime[h].full_time, dataListLifetime[h].avg_ac_power]);\n                  // Irradiance\n                  dataIrradiance.push([dataListLifetime[h].full_time, dataListLifetime[h].avg_month_sensor1_data]);\n                }\n              }\n              break;\n            default:\n              if (_Libs2.default.isArrayData(data.irradiance)) {\n                var dataListDayIrradiance = data.irradiance;\n                for (var i = 0; i < dataListDayIrradiance.length; i++) {\n                  if (i == 0) {\n                    xAxisTitle = dataListDayIrradiance[i].xAxisTitle;\n                  }\n                  dataIrradiance.push([dataListDayIrradiance[i].time, dataListDayIrradiance[i].sensor1_data < 0 ? 0 : dataListDayIrradiance[i].sensor1_data]);\n                }\n              }\n\n              if (_Libs2.default.isArrayData(data.energy)) {\n                var dataListEnergy = data.energy;\n                for (var u = 0; u < dataListEnergy.length; u++) {\n                  if (u == 0) {\n                    titleEnergy = dataListEnergy[u].devicename;\n                    categories.push([dataListEnergy[u].time]);\n                  } else {\n                    if (dataListEnergy[u].ytd_kwh_total <= 0 || dataListEnergy[u - 1].ytd_kwh_total <= 0) {\n                      dataEnergy.push([0]);\n                    } else {\n                      dataEnergy.push([dataListEnergy[u].ytd_kwh_total - dataListEnergy[u - 1].ytd_kwh_total < 0 ? 0 : _Libs2.default.round(dataListEnergy[u].ytd_kwh_total - dataListEnergy[u - 1].ytd_kwh_total, 2)]);\n                    }\n                    categories.push([dataListEnergy[u].time]);\n\n                    //ac_power \n                    dataPower.push([dataListEnergy[u].time, dataListEnergy[u].ac_power < 0 ? 0 : dataListEnergy[u].ac_power]);\n                  }\n                }\n              }\n\n              break;\n          }\n\n          self.setState({\n            dataCategories: categories,\n            dataIrradiance: dataIrradiance,\n            dataPower: dataPower,\n            dataEnergy: dataEnergy,\n            titleEnergy: titleEnergy,\n            xAxisTitle: xAxisTitle\n          }, function () {\n            self.loadChartOption();\n          });\n        }\n      });\n    }\n  }, {\n    key: 'onClickNext',\n    value: function onClickNext() {\n      var curItem = this.state.curItem,\n          self = this,\n          filterBy = this.state.paramsFilter.filterBy,\n          showNextBtn = this.state.showNextBtn;\n      var compareDate = _Libs2.default.compareDate(_Libs2.default.addDays(curItem.end_date, 1), 'MM/DD/YYYY', curItem.current_date);\n      switch (filterBy) {\n        case 'day':\n          if (compareDate >= 0) {\n            showNextBtn = false;\n            curItem.end_date = _Libs2.default.addDays(curItem.end_date, 1);\n            curItem.start_date = curItem.end_date;\n          } else {\n            curItem.end_date = _Libs2.default.addDays(curItem.end_date, 1);\n            curItem.start_date = curItem.end_date;\n            showNextBtn = true;\n          }\n\n          break;\n\n        case 'threeDay':\n          if (compareDate > 0) {\n            showNextBtn = false;\n            curItem.end_date = _Libs2.default.addDays(curItem.end_date, 1);\n            curItem.start_date = _Libs2.default.addDays(curItem.start_date, 1);\n          } else {\n            curItem.end_date = _Libs2.default.addDays(curItem.end_date, 1);\n            curItem.start_date = _Libs2.default.addDays(curItem.start_date, 1);\n            showNextBtn = true;\n          }\n\n          break;\n        case 'month':\n          var compareMonth = _Libs2.default.compareDate(_Libs2.default.addMonths(curItem.end_date, 1), 'MM/DD/YYYY', curItem.current_date);\n          if (compareMonth > 0) {\n            showNextBtn = false;\n            curItem.end_date = _Libs2.default.getCurrentMMDDYYYYHI();\n            curItem.start_date = _Libs2.default.getCurrentMMDDYYYYHI();\n          } else {\n            curItem.end_date = _Libs2.default.addMonths(curItem.end_date, 1);\n            curItem.start_date = _Libs2.default.addMonths(curItem.start_date, 1);\n            showNextBtn = true;\n          }\n          break;\n        case 'year':\n          var compareYear = _Libs2.default.compareDate(_Libs2.default.addMonths(curItem.end_date, 1), 'MM/DD/YYYY', curItem.current_date);\n          if (compareYear > 0) {\n            showNextBtn = false;\n            curItem.end_date = _Libs2.default.addMonths(curItem.end_date, 1);\n            curItem.start_date = _Libs2.default.addMonths(curItem.start_date, 1);\n          } else {\n            curItem.end_date = _Libs2.default.addMonths(curItem.end_date, 1);\n            curItem.start_date = _Libs2.default.addMonths(curItem.start_date, 1);\n            showNextBtn = true;\n          }\n\n          break;\n      }\n      this.setState({\n        curItem: curItem,\n        showNextBtn: showNextBtn\n      }, function () {\n        self.getChartInverterPerformance();\n      });\n    }\n  }, {\n    key: 'onClickPrev',\n    value: function onClickPrev() {\n      var curItem = this.state.curItem,\n          filterBy = this.state.paramsFilter.filterBy,\n          showNextBtn = this.state.showNextBtn,\n          self = this;\n      // var compareDate = Libs.compareDate(Libs.addDays(curItem.end_date, 1), 'MM/DD/YYYY', curItem.current_date);\n      switch (filterBy) {\n        case 'day':\n          curItem.end_date = _Libs2.default.addDays(curItem.end_date, -1);\n          curItem.start_date = curItem.end_date;\n          showNextBtn = true;\n          break;\n        case 'month':\n          var t = new Date(curItem.end_date);\n          var y = t.getFullYear(),\n              m = t.getMonth();\n          var endOfMonth = moment(_Libs2.default.addMonths(new Date(y, m, 1), -1)).endOf('month').format('MM/DD/YYYY HH:mm');\n          curItem.end_date = endOfMonth;\n          curItem.start_date = endOfMonth;\n          showNextBtn = true;\n          break;\n        case 'threeDay':\n          curItem.end_date = _Libs2.default.addDays(curItem.end_date, -1);\n          curItem.start_date = _Libs2.default.addDays(curItem.start_date, -1);\n          showNextBtn = true;\n          break;\n        case 'year':\n          curItem.end_date = _Libs2.default.addMonths(curItem.end_date, -1);\n          curItem.start_date = _Libs2.default.addMonths(curItem.start_date, -1);\n          showNextBtn = true;\n          break;\n      }\n      this.setState({\n        curItem: curItem,\n        showNextBtn: showNextBtn\n      }, function () {\n        self.getChartInverterPerformance();\n      });\n    }\n  }, {\n    key: 'onClickBackward',\n    value: function onClickBackward() {\n      var curItem = this.state.curItem,\n          filterBy = this.state.paramsFilter.filterBy,\n          showNextBtn = this.state.showNextBtn,\n          self = this;\n      switch (filterBy) {\n        case 'threeDay':\n          curItem.end_date = _Libs2.default.addDays(curItem.end_date, -2);\n          curItem.start_date = _Libs2.default.addDays(curItem.start_date, -2);\n          showNextBtn = true;\n          break;\n        case 'month':\n          curItem.end_date = _Libs2.default.addMonths(curItem.end_date, -1);\n          curItem.start_date = _Libs2.default.addMonths(curItem.start_date, -1);\n          showNextBtn = true;\n          break;\n        case 'year':\n          curItem.end_date = _Libs2.default.addMonths(curItem.end_date, -12);\n          curItem.start_date = _Libs2.default.addMonths(curItem.start_date, -12);\n          showNextBtn = true;\n          break;\n      }\n\n      this.setState({\n        curItem: curItem,\n        showNextBtn: showNextBtn\n      }, function () {\n        self.getChartInverterPerformance();\n      });\n    }\n  }, {\n    key: 'onClicForward',\n    value: function onClicForward() {\n      var curItem = this.state.curItem,\n          filterBy = this.state.paramsFilter.filterBy,\n          showNextBtn = this.state.showNextBtn,\n          self = this;\n\n      switch (filterBy) {\n        case 'threeDay':\n          var compareThreeDay = _Libs2.default.compareDate(_Libs2.default.addDays(curItem.end_date, 2), 'MM/DD/YYYY', curItem.current_date);\n          if (compareThreeDay > 0) {\n            showNextBtn = false;\n            curItem.end_date = _Libs2.default.getCurrentDDMMYYYYHI();\n            curItem.start_date = _Libs2.default.addDays(_Libs2.default.getCurrentDDMMYYYYHI(), -2);\n          } else {\n            curItem.end_date = _Libs2.default.addDays(curItem.end_date, 2);\n            curItem.start_date = _Libs2.default.addDays(curItem.start_date, 2);\n            showNextBtn = true;\n          }\n\n          break;\n        case 'month':\n          var compareMonth = _Libs2.default.compareDate(_Libs2.default.addMonths(curItem.end_date, 1), 'MM/DD/YYYY', curItem.current_date);\n          if (compareMonth > 0) {\n            showNextBtn = false;\n            curItem.end_date = _Libs2.default.getCurrentDDMMYYYYHI();\n            curItem.start_date = _Libs2.default.addMonths(_Libs2.default.getCurrentDDMMYYYYHI(), -1);\n          } else {\n            curItem.end_date = _Libs2.default.addMonths(curItem.end_date, 1);\n            curItem.start_date = _Libs2.default.addMonths(curItem.start_date, 1);\n            showNextBtn = true;\n          }\n          break;\n\n        case 'year':\n          var compareYear = _Libs2.default.compareDate(_Libs2.default.addYears(curItem.end_date, 1), 'MM/DD/YYYY', curItem.current_date);\n          if (compareYear > 0) {\n            showNextBtn = false;\n            curItem.end_date = _Libs2.default.getCurrentDDMMYYYYHI();\n            curItem.start_date = _Libs2.default.addYears(_Libs2.default.getCurrentDDMMYYYYHI(), -1);\n          } else {\n            curItem.end_date = _Libs2.default.addYears(curItem.end_date, 1);\n            curItem.start_date = _Libs2.default.addYears(curItem.start_date, 1);\n            showNextBtn = true;\n          }\n\n          break;\n      }\n      this.setState({\n        curItem: curItem,\n        showNextBtn: showNextBtn\n      }, function () {\n        self.getChartInverterPerformance();\n      });\n    }\n  }, {\n    key: 'onChangeFilterBy',\n    value: function onChangeFilterBy(value) {\n      var self = this,\n          curItem = this.state.curItem,\n          paramsFilter = this.state.paramsFilter;\n      if (value == 'day') {\n        curItem.start_date = _Libs2.default.getCurrentMMDDYYYYHI();\n        curItem.end_date = _Libs2.default.getCurrentMMDDYYYYHI();\n      }\n\n      if (value == 'threeDay') {\n        curItem.start_date = _Libs2.default.addDays(curItem.end_date, -2);\n      }\n\n      if (value == 'month') {\n        curItem.start_date = _Libs2.default.addMonths(curItem.end_date, -1);\n      }\n\n      if (value == 'year') {\n        curItem.start_date = _Libs2.default.getCurrentMMDDYYYYHI();\n        curItem.end_date = _Libs2.default.getCurrentMMDDYYYYHI();\n      }\n\n      paramsFilter.filterBy = value;\n\n      this.setState({\n        paramsFilter: paramsFilter,\n        curItem: curItem\n      }, function () {\n        self.getChartInverterPerformance();\n      });\n    }\n  }, {\n    key: 'onChangeOurImpact',\n    value: function onChangeOurImpact(value) {\n      this.setState({ ourImpact: value });\n    }\n  }, {\n    key: 'loadChartOption',\n    value: function loadChartOption() {\n      var height = document.getElementById('operating_container').clientHeight;\n      var paramsFilter = this.state.paramsFilter;\n      var chartOption = this.state.chartOption;\n      switch (paramsFilter.filterBy) {\n        case 'day':\n\n          chartOption = {\n            credits: { enabled: false },\n            exporting: { enabled: true },\n            chart: {\n              height: height\n            },\n\n            title: {\n              text: 'Inverter Performance'\n            },\n\n            legend: {\n              layout: 'horizontal',\n              align: 'center',\n              verticalAlign: 'bottom',\n              borderWidth: 0,\n              showInLegend: false\n            },\n\n            colors: ['#ca5952', '#2491d8', '#f2bb46'],\n            xAxis: [{\n              title: { text: this.state.xAxisTitle, enabled: true },\n              alignTicks: false,\n              tickInterval: 12,\n              gridLineWidth: 1,\n              categories: this.state.dataCategories\n            }, {\n              title: { text: 'Data', enabled: false },\n              tickInterval: 8,\n              opposite: true,\n              visible: false\n            }],\n\n            yAxis: [{\n              title: { text: 'Kilowatts', enabled: true },\n              lineWidth: 1,\n              gridLineWidth: 1,\n              labels: {\n                enabled: true\n              }\n            }, {\n              title: { text: 'Watts/meter²', enabled: true },\n              lineWidth: 1,\n              opposite: true,\n              gridLineWidth: 1,\n              labels: {\n                enabled: true\n              }\n            }],\n\n            plotOptions: {\n              plotOptions: {\n                series: {\n                  marker: {\n                    enabled: true\n                  }\n                }\n              }\n            },\n\n            tooltip: {\n              shared: false,\n              crosshairs: true\n            },\n            series: [{\n              name: this.state.titleEnergy,\n              type: 'column',\n              tooltip: {\n                valueSuffix: ' kW'\n              },\n              data: this.state.dataEnergy,\n              zIndex: -1\n            }, {\n              name: 'Weather Station - Basic (POA)*',\n              type: 'spline',\n              xAxis: 1,\n              yAxis: 1,\n              lineWidth: 3,\n              tooltip: {\n                valueSuffix: ' W/m²'\n              },\n              data: this.state.dataIrradiance,\n              id: 's1',\n              marker: {\n                radius: 1.5\n              }\n            }, {\n              name: 'Estimated output (blue sky)',\n              type: 'spline',\n              tooltip: {\n                valueSuffix: ' kW'\n              },\n\n              xAxis: 1,\n              lineWidth: 3,\n              data: this.state.dataPower,\n              id: 's2',\n              marker: {\n                radius: 1.5\n              }\n            }]\n          };\n          break;\n        case 'threeDay':\n          chartOption = {\n            credits: { enabled: false },\n            exporting: { enabled: true },\n            chart: {\n              height: height\n            },\n\n            title: {\n              text: 'Inverter Performance'\n            },\n\n            legend: {\n              layout: 'horizontal',\n              align: 'center',\n              verticalAlign: 'bottom',\n              borderWidth: 0,\n              showInLegend: false\n            },\n\n            colors: ['#ca5952', '#2491d8', '#f2bb46'],\n            xAxis: {\n              title: { text: this.state.xAxisTitle, enabled: true },\n              tickInterval: 24 * 3600 * 1000,\n              type: 'datetime',\n              dateTimeLabelFormats: {\n                day: \"%e. of %b\",\n                month: \"%b '%y\",\n                year: \"%Y\"\n              },\n              labels: {\n                formatter: function formatter() {\n                  return moment(this.value).format(\"MM-DD-YYYY\");\n                }\n              }\n            },\n\n            yAxis: [{\n              title: { text: 'Kilowatts', enabled: true },\n              lineWidth: 1,\n              gridLineWidth: 1,\n              labels: {\n                enabled: true\n              }\n            }, {\n              title: { text: 'Watts/meter²', enabled: true },\n              opposite: true,\n              labels: {\n                enabled: true\n              }\n            }],\n\n            plotOptions: {\n              series: {\n                lineWidth: 3,\n                states: {\n                  hover: {\n                    lineWidth: 4\n                  }\n                },\n                marker: {\n                  enabled: true\n                }\n\n              }\n            },\n\n            tooltip: {\n              shared: false,\n              crosshairs: true\n            },\n            series: [{\n              name: this.state.titleEnergy,\n              type: 'column',\n              tooltip: {\n                valueSuffix: ' kW'\n              },\n              data: this.state.dataEnergy,\n              zIndex: -1\n            }, {\n              name: 'Weather Station - Basic (POA)*',\n              type: 'spline',\n              yAxis: 1,\n              lineWidth: 3,\n              tooltip: {\n                valueSuffix: ' W/m²'\n              },\n              data: this.state.dataIrradiance,\n              id: 's1',\n              marker: {\n                radius: 1.5\n              }\n            }, {\n              name: 'Estimated output (blue sky)',\n              type: 'line',\n              tooltip: {\n                valueSuffix: ' kW'\n              },\n              data: this.state.dataPower,\n              id: 's2',\n              marker: {\n                radius: 1.5\n              }\n            }]\n          };\n\n          break;\n\n        case 'month':\n          chartOption = {\n            credits: { enabled: false },\n            exporting: { enabled: true },\n            chart: {\n              height: height\n            },\n\n            title: {\n              text: 'Inverter Performance'\n            },\n\n            legend: {\n              layout: 'horizontal',\n              align: 'center',\n              verticalAlign: 'bottom',\n              borderWidth: 0,\n              showInLegend: false\n            },\n\n            colors: ['#ca5952', '#2491d8', '#f2bb46'],\n            xAxis: {\n              title: { text: this.state.xAxisTitle, enabled: true },\n              alignTicks: false,\n              gridLineWidth: 1,\n              categories: this.state.dataCategories\n            },\n\n            yAxis: [{\n              title: { text: 'Kilowatts', enabled: true },\n              lineWidth: 1,\n              gridLineWidth: 1,\n              labels: {\n                enabled: true\n              }\n            }, {\n              title: { text: 'Watts/meter²', enabled: true },\n              opposite: true,\n              labels: {\n                enabled: true\n              }\n            }],\n\n            plotOptions: {\n              spline: {\n                lineWidth: 3,\n                states: {\n                  hover: {\n                    lineWidth: 4\n                  }\n                },\n                marker: {\n                  enabled: true\n                }\n              }\n            },\n\n            tooltip: {\n              shared: false,\n              crosshairs: true\n            },\n            series: [{\n              name: this.state.titleEnergy,\n              type: 'column',\n              tooltip: {\n                valueSuffix: ' kW'\n              },\n              data: this.state.dataEnergy,\n              zIndex: -1\n            }, {\n              name: 'Weather Station - Basic (POA)*',\n              type: 'line',\n              yAxis: 1,\n              lineWidth: 3,\n              tooltip: {\n                valueSuffix: ' W/m²'\n              },\n              data: this.state.dataIrradiance,\n              id: 's1',\n              marker: {\n                radius: 1.5\n              }\n            }, {\n              name: 'Estimated output (blue sky)',\n              type: 'line',\n              tooltip: {\n                valueSuffix: ' kW'\n              },\n              data: this.state.dataPower,\n              id: 's2',\n              marker: {\n                radius: 1.5\n              }\n            }]\n          };\n          break;\n        case 'year':\n          chartOption = {\n            credits: { enabled: false },\n            exporting: { enabled: true },\n            chart: {\n              height: height\n            },\n\n            title: {\n              text: 'Inverter Performance'\n            },\n\n            legend: {\n              layout: 'horizontal',\n              align: 'center',\n              verticalAlign: 'bottom',\n              borderWidth: 0,\n              showInLegend: false\n            },\n\n            colors: ['#ca5952', '#2491d8', '#f2bb46'],\n            xAxis: {\n              title: { text: this.state.xAxisTitle, enabled: true },\n              alignTicks: false,\n              gridLineWidth: 1,\n              categories: this.state.dataCategories\n            },\n\n            yAxis: [{\n              title: { text: 'Kilowatts', enabled: true },\n              lineWidth: 1,\n              gridLineWidth: 1,\n              labels: {\n                enabled: true\n              }\n            }, {\n              title: { text: 'Watts/meter²', enabled: true },\n              opposite: true,\n              labels: {\n                enabled: true\n              }\n            }],\n            plotOptions: {\n              spline: {\n                lineWidth: 3,\n                states: {\n                  hover: {\n                    lineWidth: 4\n                  }\n                },\n                marker: {\n                  enabled: true\n                }\n              }\n            },\n            tooltip: {\n              shared: false,\n              crosshairs: true\n            },\n            series: [{\n              name: this.state.titleEnergy,\n              type: 'column',\n              tooltip: {\n                valueSuffix: ' kW'\n              },\n              data: this.state.dataEnergy,\n              zIndex: -1\n            }, {\n              name: 'Weather Station - Basic (POA)*',\n              type: 'line',\n              yAxis: 1,\n              lineWidth: 3,\n              tooltip: {\n                valueSuffix: ' W/m²'\n              },\n              data: this.state.dataIrradiance,\n              id: 's1',\n              marker: {\n                radius: 1.5\n              }\n            }, {\n              name: 'Estimated output (blue sky)',\n              type: 'line',\n              tooltip: {\n                valueSuffix: ' kW'\n              },\n              data: this.state.dataPower,\n              id: 's2',\n              marker: {\n                radius: 1.5\n              }\n            }]\n          };\n\n          break;\n        case 'lifetime':\n          chartOption = {\n            credits: { enabled: false },\n            exporting: { enabled: true },\n            chart: {\n              height: height\n            },\n\n            title: {\n              text: 'Inverter Performance'\n            },\n\n            legend: {\n              layout: 'horizontal',\n              align: 'center',\n              verticalAlign: 'bottom',\n              borderWidth: 0,\n              showInLegend: false\n            },\n\n            colors: ['#ca5952', '#2491d8', '#f2bb46'],\n            xAxis: {\n              title: { text: this.state.xAxisTitle, enabled: true },\n              alignTicks: false,\n              gridLineWidth: 1,\n              categories: this.state.dataCategories\n            },\n\n            yAxis: [{\n              title: { text: 'Kilowatts', enabled: true },\n              lineWidth: 1,\n              gridLineWidth: 1,\n              labels: {\n                enabled: true\n              }\n            }, {\n              title: { text: 'Watts/meter²', enabled: true },\n              opposite: true,\n              labels: {\n                enabled: true\n              }\n            }],\n\n            tooltip: {\n              shared: false,\n              crosshairs: true\n            },\n            series: [{\n              name: this.state.titleEnergy,\n              type: 'column',\n              tooltip: {\n                valueSuffix: ' kW'\n              },\n              data: this.state.dataEnergy,\n              zIndex: -1\n            }, {\n              name: 'Weather Station - Basic (POA)*',\n              type: 'line',\n              yAxis: 1,\n              lineWidth: 3,\n              tooltip: {\n                valueSuffix: ' W/m²'\n              },\n              data: this.state.dataIrradiance,\n              id: 's1',\n              marker: {\n                radius: 1.5\n              }\n            }, {\n              name: 'Estimated output (blue sky)',\n              type: 'line',\n              tooltip: {\n                valueSuffix: ' kW'\n              },\n              data: this.state.dataPower,\n              id: 's2',\n              marker: {\n                radius: 1.5\n              }\n            }]\n          };\n          break;\n      }\n\n      this.setState({ chartOption: chartOption });\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      return this.jsxTemplate.call(this);\n    }\n  }]);\n\n  return ClientMini;\n}(_react2.default.Component);\n\nexports.default = ClientMini;\n\n//# sourceURL=webpack:///./src/ui/desktop/clientMini/ClientMini.js?");

/***/ }),

/***/ "DnZx":
/*!***************************************************!*\
  !*** ./src/ui/desktop/clientMini/ClientMini.scss ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin\n\n//# sourceURL=webpack:///./src/ui/desktop/clientMini/ClientMini.scss?");

/***/ }),

/***/ "G1ib":
/*!*****************************************!*\
  !*** ./src/services/MiniSiteService.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Libs = __webpack_require__(/*! ../utils/Libs */ \"aKSJ\");\n\nvar _Libs2 = _interopRequireDefault(_Libs);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar MiniSiteService = function () {\n    _createClass(MiniSiteService, null, [{\n        key: 'instance',\n        get: function get() {\n            if (!this._instance) {\n                this._instance = new MiniSiteService();\n            }\n            return this._instance;\n        }\n    }]);\n\n    function MiniSiteService() {\n        _classCallCheck(this, MiniSiteService);\n    }\n\n    /**\n     * API get mini site information\n     * @author long.pham 2020-11-02\n     * @param {function(data)} callBack\n     * @param {int} id_customer, id\n     */\n\n\n    _createClass(MiniSiteService, [{\n        key: 'getMiniSiteInfo',\n        value: function getMiniSiteInfo(objE, callBack) {\n            var isShowProgress = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n            try {\n                var http = new flHttp(isShowProgress);\n                http.post(Constants.URL.MINI_SITE.INFO, objE, function (status, rs) {\n                    if (typeof callBack === 'function') {\n                        if (!status || !rs) {\n                            //error http => lib http  proccess\n                            return;\n                        }\n                        var data = {};\n                        if (rs.status && _typeof(rs.data) === 'object') {\n                            data = rs.data;\n                        }\n                        callBack(data);\n                    }\n                });\n            } catch (error) {\n                callBack({});\n            }\n        }\n\n        /**\n         * API get chart mini site inverter performance\n         * @author long.pham 2020-11-02\n         * @param {function(data)} callBack\n         * @param {int} id_site \n         * @return Object\n         */\n\n    }, {\n        key: 'getChartInverterPerformance',\n        value: function getChartInverterPerformance(objE, callBack) {\n            var isShowProgress = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n            try {\n                var http = new flHttp(isShowProgress);\n                http.post(Constants.URL.MINI_SITE.CHART_INVERTER_PERFORMANCE, objE, function (status, rs) {\n                    if (typeof callBack === 'function') {\n                        if (!status || !rs) {\n                            //error http => lib http  proccess\n                            return;\n                        }\n                        var data = {};\n                        if (rs.status && _typeof(rs.data) === 'object') {\n                            data = rs.data;\n                        }\n                        callBack(data);\n                    }\n                });\n            } catch (error) {\n                callBack({});\n            }\n        }\n    }]);\n\n    return MiniSiteService;\n}();\n\nexports.default = MiniSiteService;\n\n//# sourceURL=webpack:///./src/services/MiniSiteService.js?");

/***/ }),

/***/ "T89o":
/*!*******************************************************************************!*\
  !*** delegated ./node_modules/lodash-es/lodash.js from dll-reference library ***!
  \*******************************************************************************/
/*! exports provided: add, after, ary, assign, assignIn, assignInWith, assignWith, at, attempt, before, bind, bindAll, bindKey, camelCase, capitalize, castArray, ceil, chain, chunk, clamp, clone, cloneDeep, cloneDeepWith, cloneWith, commit, compact, concat, cond, conforms, conformsTo, constant, countBy, create, curry, curryRight, debounce, deburr, defaultTo, defaults, defaultsDeep, defer, delay, difference, differenceBy, differenceWith, divide, drop, dropRight, dropRightWhile, dropWhile, each, eachRight, endsWith, entries, entriesIn, eq, escape, escapeRegExp, every, extend, extendWith, fill, filter, find, findIndex, findKey, findLast, findLastIndex, findLastKey, first, flatMap, flatMapDeep, flatMapDepth, flatten, flattenDeep, flattenDepth, flip, floor, flow, flowRight, forEach, forEachRight, forIn, forInRight, forOwn, forOwnRight, fromPairs, functions, functionsIn, get, groupBy, gt, gte, has, hasIn, head, identity, inRange, includes, indexOf, initial, intersection, intersectionBy, intersectionWith, invert, invertBy, invoke, invokeMap, isArguments, isArray, isArrayBuffer, isArrayLike, isArrayLikeObject, isBoolean, isBuffer, isDate, isElement, isEmpty, isEqual, isEqualWith, isError, isFinite, isFunction, isInteger, isLength, isMap, isMatch, isMatchWith, isNaN, isNative, isNil, isNull, isNumber, isObject, isObjectLike, isPlainObject, isRegExp, isSafeInteger, isSet, isString, isSymbol, isTypedArray, isUndefined, isWeakMap, isWeakSet, iteratee, join, kebabCase, keyBy, keys, keysIn, last, lastIndexOf, lodash, lowerCase, lowerFirst, lt, lte, map, mapKeys, mapValues, matches, matchesProperty, max, maxBy, mean, meanBy, memoize, merge, mergeWith, method, methodOf, min, minBy, mixin, multiply, negate, next, noop, now, nth, nthArg, omit, omitBy, once, orderBy, over, overArgs, overEvery, overSome, pad, padEnd, padStart, parseInt, partial, partialRight, partition, pick, pickBy, plant, property, propertyOf, pull, pullAll, pullAllBy, pullAllWith, pullAt, random, range, rangeRight, rearg, reduce, reduceRight, reject, remove, repeat, replace, rest, result, reverse, round, sample, sampleSize, set, setWith, shuffle, size, slice, snakeCase, some, sortBy, sortedIndex, sortedIndexBy, sortedIndexOf, sortedLastIndex, sortedLastIndexBy, sortedLastIndexOf, sortedUniq, sortedUniqBy, split, spread, startCase, startsWith, stubArray, stubFalse, stubObject, stubString, stubTrue, subtract, sum, sumBy, tail, take, takeRight, takeRightWhile, takeWhile, tap, template, templateSettings, throttle, thru, times, toArray, toFinite, toInteger, toIterator, toJSON, toLength, toLower, toNumber, toPairs, toPairsIn, toPath, toPlainObject, toSafeInteger, toString, toUpper, transform, trim, trimEnd, trimStart, truncate, unary, unescape, union, unionBy, unionWith, uniq, uniqBy, uniqWith, uniqueId, unset, unzip, unzipWith, update, updateWith, upperCase, upperFirst, value, valueOf, values, valuesIn, without, words, wrap, wrapperAt, wrapperChain, wrapperCommit, wrapperLodash, wrapperNext, wrapperPlant, wrapperReverse, wrapperToIterator, wrapperValue, xor, xorBy, xorWith, zip, zipObject, zipObjectDeep, zipWith, default */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = (__webpack_require__(/*! dll-reference library */ \"N6oO\"))(1088);\n\n//# sourceURL=webpack:///delegated_./node_modules/lodash-es/lodash.js_from_dll-reference_library?");

/***/ }),

/***/ "V2wY":
/*!**************************************************!*\
  !*** ./src/ui/desktop/clientMini/ClientMini.jsx ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nexports.default = function () {\n  var _state = this.state,\n      curItem = _state.curItem,\n      chartOption = _state.chartOption,\n      paramsFilter = _state.paramsFilter;\n\n\n  return _react2.default.createElement(\n    'section',\n    { className: 'client_mini' },\n    _react2.default.createElement(\n      'div',\n      { className: 'view_header' },\n      _react2.default.createElement(\n        'p',\n        null,\n        'Site: ',\n        curItem.name\n      )\n    ),\n    _react2.default.createElement(\n      'div',\n      { className: 'view_left' },\n      _react2.default.createElement(\n        'ul',\n        null,\n        _react2.default.createElement(\n          'li',\n          null,\n          _react2.default.createElement(\n            'div',\n            { className: 'item' },\n            _react2.default.createElement(\n              'p',\n              { className: 'value' },\n              ' ',\n              !_Libs2.default.isBlank(curItem.ac_power) && curItem.ac_power > 0 ? curItem.ac_power + \" kW\" : \"-\",\n              ' '\n            ),\n            _react2.default.createElement(\n              'p',\n              { className: 'label' },\n              'Power'\n            )\n          )\n        ),\n        _react2.default.createElement(\n          'li',\n          null,\n          _react2.default.createElement(\n            'div',\n            { className: 'item' },\n            _react2.default.createElement(\n              'p',\n              { className: 'value' },\n              ' ',\n              !_Libs2.default.isBlank(curItem.energy_today) && curItem.energy_today > 0 ? _Libs2.default.formatElectricalPowerUnit(curItem.energy_today, 'h') : \"-\",\n              ' '\n            ),\n            _react2.default.createElement(\n              'p',\n              { className: 'label' },\n              'Today'\n            )\n          )\n        ),\n        _react2.default.createElement(\n          'li',\n          null,\n          _react2.default.createElement(\n            'div',\n            { className: 'item' },\n            _react2.default.createElement(\n              'p',\n              { className: 'value' },\n              ' ',\n              !_Libs2.default.isBlank(curItem.energy_this_month) && curItem.energy_this_month > 0 ? _Libs2.default.formatElectricalPowerUnit(curItem.energy_this_month, 'h') : \"-\",\n              '  '\n            ),\n            _react2.default.createElement(\n              'p',\n              { className: 'label' },\n              'This month'\n            )\n          )\n        ),\n        _react2.default.createElement(\n          'li',\n          null,\n          _react2.default.createElement(\n            'div',\n            { className: 'item' },\n            _react2.default.createElement(\n              'p',\n              { className: 'value' },\n              ' ',\n              !_Libs2.default.isBlank(curItem.energy_this_year) && curItem.energy_this_year > 0 ? _Libs2.default.formatElectricalPowerUnit(curItem.energy_this_year, 'h') : \"-\",\n              ' '\n            ),\n            _react2.default.createElement(\n              'p',\n              { className: 'label' },\n              'This year'\n            )\n          )\n        ),\n        _react2.default.createElement(\n          'li',\n          null,\n          _react2.default.createElement(\n            'div',\n            { className: 'item' },\n            _react2.default.createElement(\n              'p',\n              { className: 'value' },\n              ' ',\n              !_Libs2.default.isBlank(curItem.energy_lifetime) && curItem.energy_lifetime > 0 ? _Libs2.default.formatElectricalPowerUnit(curItem.energy_lifetime, 'h') : \"-\",\n              ' '\n            ),\n            _react2.default.createElement(\n              'p',\n              { className: 'label' },\n              'Lifetime'\n            )\n          )\n        )\n      )\n    ),\n    _react2.default.createElement(\n      'div',\n      { className: 'view_body' },\n      _react2.default.createElement(\n        'div',\n        { className: 'filter' },\n        _react2.default.createElement(\n          'div',\n          { className: 'row' },\n          _react2.default.createElement(\n            'div',\n            { className: 'col-xl-2 col-xl-2 col-md-2 text-center' },\n            paramsFilter.filterBy != 'lifetime' ? _react2.default.createElement(\n              'div',\n              { className: 'group-prev' },\n              paramsFilter.filterBy != 'day' && paramsFilter.filterBy != 'month' && paramsFilter.filterBy != 'year' ? _react2.default.createElement(\n                'a',\n                { onClick: this.onClickBackward.bind(this), className: 'step' },\n                _react2.default.createElement('span', { className: 'icon icon-backward' })\n              ) : '',\n              _react2.default.createElement(\n                'a',\n                { className: 'step', onClick: this.onClickPrev.bind(this) },\n                _react2.default.createElement('span', { className: 'icon icon-caret-left' })\n              )\n            ) : ''\n          ),\n          _react2.default.createElement(\n            'div',\n            { className: 'col-xl-8 col-xl-8 col-md-8' },\n            _react2.default.createElement(\n              'ul',\n              null,\n              _react2.default.createElement(\n                'li',\n                null,\n                _react2.default.createElement(\n                  'a',\n                  { onClick: this.onChangeFilterBy.bind(this, 'day'), className: paramsFilter.filterBy == 'day' ? \"active\" : \"\" },\n                  'Day'\n                )\n              ),\n              _react2.default.createElement(\n                'li',\n                null,\n                _react2.default.createElement(\n                  'a',\n                  { onClick: this.onChangeFilterBy.bind(this, 'threeDay'), className: paramsFilter.filterBy == 'threeDay' ? \"active\" : \"\" },\n                  '3 day'\n                )\n              ),\n              _react2.default.createElement(\n                'li',\n                null,\n                _react2.default.createElement(\n                  'a',\n                  { onClick: this.onChangeFilterBy.bind(this, 'month'), className: paramsFilter.filterBy == 'month' ? \"active\" : \"\" },\n                  'Month'\n                )\n              ),\n              _react2.default.createElement(\n                'li',\n                null,\n                _react2.default.createElement(\n                  'a',\n                  { onClick: this.onChangeFilterBy.bind(this, 'year'), className: paramsFilter.filterBy == 'year' ? \"active\" : \"\" },\n                  'Year'\n                )\n              ),\n              _react2.default.createElement(\n                'li',\n                null,\n                _react2.default.createElement(\n                  'a',\n                  { onClick: this.onChangeFilterBy.bind(this, 'lifetime'), className: paramsFilter.filterBy == 'lifetime' ? \"active\" : \"\" },\n                  'Lifetime'\n                )\n              )\n            )\n          ),\n          _react2.default.createElement(\n            'div',\n            { className: 'col-xl-2 col-xl-2 col-md-2 text-center' },\n            this.state.showNextBtn && paramsFilter.filterBy != 'lifetime' ? _react2.default.createElement(\n              'div',\n              { className: 'group-next' },\n              _react2.default.createElement(\n                'a',\n                { className: 'step', onClick: this.onClickNext.bind(this) },\n                _react2.default.createElement('span', { className: 'icon icon-caret-right' })\n              ),\n              paramsFilter.filterBy != 'day' && paramsFilter.filterBy != 'month' && paramsFilter.filterBy != 'year' ? _react2.default.createElement(\n                'a',\n                { onClick: this.onClicForward.bind(this), className: 'step' },\n                _react2.default.createElement('span', { className: 'icon icon-forward' })\n              ) : ''\n            ) : \"\"\n          )\n        )\n      ),\n      _react2.default.createElement(\n        'div',\n        { className: 'operating_chart' },\n        _react2.default.createElement(\n          'div',\n          { id: 'operating_container', className: 'operating_container' },\n          !_Libs2.default.isObjectEmpty(chartOption) ? _react2.default.createElement(_highchartsReactOfficial2.default, { highcharts: _highcharts2.default, allowChartUpdate: true, immutable: true, options: chartOption }) : \"\"\n        )\n      ),\n      _react2.default.createElement(\n        'div',\n        { className: 'operating_system' },\n        _react2.default.createElement(\n          'div',\n          { className: 'row' },\n          _react2.default.createElement(\n            'div',\n            { className: 'col-xl-6 col-lg-6 col-md-6' },\n            _react2.default.createElement(\n              'p',\n              null,\n              'System size: ',\n              _react2.default.createElement(\n                'span',\n                null,\n                curItem.dc_capacity,\n                ' kW'\n              )\n            )\n          ),\n          _react2.default.createElement(\n            'div',\n            { className: 'col-xl-6 col-lg-6 col-md-6' },\n            _react2.default.createElement(\n              'p',\n              null,\n              'Operating since: ',\n              _react2.default.createElement(\n                'span',\n                null,\n                !_Libs2.default.isBlank(curItem.built_since) && !_Libs2.default.isBlank(curItem.localization_format) ? _Libs2.default.dateFormat(curItem.commissioning, curItem.localization_format.replace(/%/gi, \"\").toUpperCase(), 'MM/DD/YYYY HH:mm:ss') : \"\"\n              )\n            )\n          )\n        )\n      )\n    ),\n    _react2.default.createElement(\n      'div',\n      { className: 'view_right' },\n      _react2.default.createElement(\n        'div',\n        { className: 'title' },\n        _react2.default.createElement(\n          'ul',\n          null,\n          _react2.default.createElement(\n            'li',\n            null,\n            'Our impact: '\n          ),\n          _react2.default.createElement(\n            'li',\n            null,\n            _react2.default.createElement(\n              'a',\n              { onClick: this.onChangeOurImpact.bind(this, 1), className: this.state.ourImpact == 1 ? \"active\" : \"\" },\n              'Month'\n            )\n          ),\n          _react2.default.createElement(\n            'li',\n            null,\n            _react2.default.createElement(\n              'a',\n              { onClick: this.onChangeOurImpact.bind(this, 2), className: this.state.ourImpact == 2 ? \"active\" : \"\" },\n              'Lifetime'\n            )\n          )\n        )\n      ),\n      _react2.default.createElement(\n        'div',\n        { className: 'content' },\n        _react2.default.createElement(\n          'ul',\n          null,\n          _react2.default.createElement(\n            'li',\n            null,\n            _react2.default.createElement(\n              'div',\n              { className: 'item' },\n              _react2.default.createElement(\n                'div',\n                { className: 'row' },\n                _react2.default.createElement(\n                  'div',\n                  { className: 'col-xl-4 col-lg-4 col-md-4' },\n                  _react2.default.createElement('img', { src: '/assets/images/Treeglass.png' })\n                ),\n                _react2.default.createElement(\n                  'div',\n                  { className: 'col-xl-8 col-lg-8 col-md-8' },\n                  _react2.default.createElement(\n                    'p',\n                    { className: 'name trees' },\n                    'trees'\n                  ),\n                  _react2.default.createElement(\n                    'p',\n                    { className: 'value' },\n                    '1,622'\n                  ),\n                  _react2.default.createElement(\n                    'p',\n                    { className: 'label' },\n                    'Trees planted'\n                  )\n                )\n              )\n            )\n          ),\n          _react2.default.createElement(\n            'li',\n            null,\n            _react2.default.createElement(\n              'div',\n              { className: 'item' },\n              _react2.default.createElement(\n                'div',\n                { className: 'row' },\n                _react2.default.createElement(\n                  'div',\n                  { className: 'col-xl-4 col-lg-4 col-md-4' },\n                  _react2.default.createElement('img', { src: '/assets/images/Gas.png' })\n                ),\n                _react2.default.createElement(\n                  'div',\n                  { className: 'col-xl-8 col-lg-8 col-md-8' },\n                  _react2.default.createElement(\n                    'p',\n                    { className: 'name gas' },\n                    'Gas'\n                  ),\n                  _react2.default.createElement(\n                    'p',\n                    { className: 'value' },\n                    '7,116'\n                  ),\n                  _react2.default.createElement(\n                    'p',\n                    { className: 'label' },\n                    'Gallons of gasoline'\n                  )\n                )\n              )\n            )\n          ),\n          _react2.default.createElement(\n            'li',\n            null,\n            _react2.default.createElement(\n              'div',\n              { className: 'item' },\n              _react2.default.createElement(\n                'div',\n                { className: 'row' },\n                _react2.default.createElement(\n                  'div',\n                  { className: 'col-xl-4 col-lg-4 col-md-4' },\n                  _react2.default.createElement('img', { src: '/assets/images/Energy.png' })\n                ),\n                _react2.default.createElement(\n                  'div',\n                  { className: 'col-xl-8 col-lg-8 col-md-8' },\n                  _react2.default.createElement(\n                    'p',\n                    { className: 'name energy' },\n                    'Energy'\n                  ),\n                  _react2.default.createElement(\n                    'p',\n                    { className: 'value' },\n                    '12.4 GWh'\n                  ),\n                  _react2.default.createElement(\n                    'p',\n                    { className: 'label' },\n                    'Energy produced'\n                  )\n                )\n              )\n            )\n          ),\n          _react2.default.createElement(\n            'li',\n            null,\n            _react2.default.createElement(\n              'div',\n              { className: 'item' },\n              _react2.default.createElement(\n                'div',\n                { className: 'row' },\n                _react2.default.createElement(\n                  'div',\n                  { className: 'col-xl-4 col-lg-4 col-md-4' },\n                  _react2.default.createElement('img', { src: '/assets/images/waterglass.png' })\n                ),\n                _react2.default.createElement(\n                  'div',\n                  { className: 'col-xl-8 col-lg-8 col-md-8' },\n                  _react2.default.createElement(\n                    'p',\n                    { className: 'name water' },\n                    'water'\n                  ),\n                  _react2.default.createElement(\n                    'p',\n                    { className: 'value' },\n                    '6,196,423'\n                  ),\n                  _react2.default.createElement(\n                    'p',\n                    { className: 'label' },\n                    'Gallons of water'\n                  )\n                )\n              )\n            )\n          )\n        )\n      )\n    ),\n    _react2.default.createElement(\n      'div',\n      { className: 'view_footer' },\n      'Last Update: ',\n      !_Libs2.default.isObjectEmpty(curItem) && !_Libs2.default.isBlank(curItem.localization_format) ? moment().format(curItem.localization_format.replace(/%/gi, \"\").toUpperCase() + ' h:mm:ss A') : \"\"\n    )\n  );\n};\n\nvar _react = __webpack_require__(/*! react */ \"q1tI\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _highcharts = __webpack_require__(/*! highcharts */ \"6n/F\");\n\nvar _highcharts2 = _interopRequireDefault(_highcharts);\n\nvar _highchartsReactOfficial = __webpack_require__(/*! highcharts-react-official */ \"lVxW\");\n\nvar _highchartsReactOfficial2 = _interopRequireDefault(_highchartsReactOfficial);\n\nvar _exporting = __webpack_require__(/*! highcharts/modules/exporting */ \"AxlJ\");\n\nvar _exporting2 = _interopRequireDefault(_exporting);\n\nvar _histogramBellcurve = __webpack_require__(/*! highcharts/modules/histogram-bellcurve */ \"haik\");\n\nvar _histogramBellcurve2 = _interopRequireDefault(_histogramBellcurve);\n\nvar _Libs = __webpack_require__(/*! ../../../utils/Libs */ \"aKSJ\");\n\nvar _Libs2 = _interopRequireDefault(_Libs);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n(0, _histogramBellcurve2.default)(_highcharts2.default);\n\nif ((typeof _highcharts2.default === 'undefined' ? 'undefined' : _typeof(_highcharts2.default)) === 'object') {\n  (0, _exporting2.default)(_highcharts2.default);\n}\n\n//# sourceURL=webpack:///./src/ui/desktop/clientMini/ClientMini.jsx?");

/***/ })

}]);