(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[7],{

/***/ "ii8u":
/*!***********************************!*\
  !*** ./src/component/FLSelect.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(process) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = __webpack_require__(/*! react */ \"q1tI\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(/*! prop-types */ \"17x9\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _classnames = __webpack_require__(/*! classnames */ \"TSYQ\");\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _Constants = __webpack_require__(/*! ../utils/Constants */ \"unnO\");\n\nvar _Constants2 = _interopRequireDefault(_Constants);\n\nvar _Libs = __webpack_require__(/*! ../utils/Libs */ \"aKSJ\");\n\nvar _Libs2 = _interopRequireDefault(_Libs);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar FLSelect = function (_React$Component) {\n    _inherits(FLSelect, _React$Component);\n\n    //Khởi tạo constructor để nhận các giá trị props từ component\n    function FLSelect(props) {\n        _classCallCheck(this, FLSelect);\n\n        var _this = _possibleConstructorReturn(this, (FLSelect.__proto__ || Object.getPrototypeOf(FLSelect)).call(this, props));\n\n        _this.onSelect2Change = function (event) {\n\n            var self = _this;\n            setTimeout(function () {\n                //Kiểm tra tồn tại props onChange hay không\n                if (self.props.onChange && typeof self.props.onChange === 'function') {\n                    // var target = event.target;\n                    // //lấy giá trị name của select\n                    // var name = target.name;\n                    // //lấy value khi change\n                    // var value = target.value;\n                    //Đẩy sử liệu ra ngoài component\n                    //self.props.onChange(name, value, event);\n                    var data = self.selector.select2('data');\n                    self.props.onChange(event, data);\n                }\n                // //Kiểm tra tồn tại props onSelectChange hay không\n                // if (self.props.onSelectChange && typeof self.props.onSelectChange === 'function') {\n                //     //Đẩy dử liệu ra ngoài component\n                //     //var data = $(event.target).select2('data');\n                //     var data = self.selector.select2('data');\n                //     self.props.onSelectChange(event, data);\n                // }\n            });\n        };\n\n        _this.onSelect2Unselect = function (event) {\n            var self = _this;\n            setTimeout(function () {\n                //Kiểm tra tồn tại props onUnselect hay không\n                // if (!self.props.onUnselect || typeof self.props.onUnselect !== 'function') return;\n                // //Đẩy sử liệu ra ngoài component\n                // var data = self.selector.select2('data');\n                // self.props.onUnselect(event, data);\n\n                /*Minh note: Chạy làm onselect OR onChange khi unselect*/\n                if (self.props.onSelect && typeof self.props.onSelect == 'function') {\n                    //var data = event.params.data;\n                    var data = self.selector.select2('data');\n                    //event.target.value = null;\n                    //Đẩy sử liệu ra ngoài component\n                    self.props.onSelect(event, data);\n                    return;\n                }\n                if (self.props.onChange && typeof self.props.onChange == 'function') {\n                    //var data = event.params.data;\n                    var data = self.selector.select2('data');\n                    //event.target.value = null;\n                    //Đẩy sử liệu ra ngoài component\n                    self.props.onChange(event, data);\n                    return;\n                }\n            });\n        };\n\n        _this.onSelect2Select = function (event) {\n            var self = _this;\n            setTimeout(function () {\n                if (!self.props.onSelect || typeof self.props.onSelect !== 'function') return;\n                //var data = event.params.data;\n                var data = self.selector.select2('data');\n                //Đẩy sử liệu ra ngoài component\n                self.props.onSelect(event, data);\n            });\n        };\n\n        _this.onSelect2Close = function (event) {\n            event.target.focus();\n            if (_this.props.onSelectClose && typeof _this.props.onSelectClose === 'function') {\n                _this.props.onSelectClose(event);\n            }\n        };\n\n        _this.state = {\n            params: null, //sử dụng post ajax\n            selectedValue: null,\n            options: [],\n            valueChanged: false,\n            optionsChanged: false\n            //Dùng để kiểm tra nếu có giá trị option thay đổi mới add data vào select2\n            //this.selectData = null;\n        };_this.selector = null;\n        _this.forceUpdateValue = false;\n        _this.initialRender = true;\n        return _this;\n    }\n    /**\n     * @description Được gọi ngay sau khi component được mount vào trong DOM. Được gọi sau hàm render\n     * @author Luyen Nguyen 2018-10-07\n     */\n\n\n    _createClass(FLSelect, [{\n        key: 'componentDidMount',\n        value: function componentDidMount() {\n            this.initSelect2();\n            this.updateValue();\n        }\n        /**\n         * @description Được gọi ngay trước khi có props mới tức nextProps\n         * trong hàm này không được phép setState để setState phải gọi đến hàm componentDidUpdate\n         * @author Luyen Nguyen 2018-11-09\n         */\n\n    }, {\n        key: 'componentDidUpdate',\n\n        /**\n         * @description Hàm này được gọi ngay sau khi component được render xong\n         * Lúc này cấu trúc DOM mới được cập nhật, tiến hành set lại giá trị cho state\n         * @author Luyen Nguyen 2018-11-09\n         */\n        value: function componentDidUpdate(prevProps, prevState) {\n            //update lại options\n            if (this.state.optionsChanged) {\n                // if(!this.props.isAjax)\n                // {\n                this.selector.empty();\n                this.selector.select2(this.select2Config());\n                //}\n                this.state.valueChanged = true;\n            }\n            //update lại value\n            if (this.state.valueChanged) {\n                this.updateValue();\n            }\n            this.state.valueChanged = false;\n            this.state.optionsChanged = false;\n        }\n        /** \n         * @description Remove select2 sau khi thoát khỏi component\n         * @author Luyen Nguyen 2018-10-07\n         */\n\n    }, {\n        key: 'componentWillUnmount',\n        value: function componentWillUnmount() {\n            this.destroySelect2();\n        }\n    }, {\n        key: 'initSelect2',\n        value: function initSelect2() {\n            this.selector.select2(this.select2Config());\n            this.attachEventHandlers();\n        }\n    }, {\n        key: 'destroySelect2',\n        value: function destroySelect2() {\n            this.detachEventHandlers();\n            this.selector.select2('destroy');\n        }\n    }, {\n        key: 'attachEventHandlers',\n        value: function attachEventHandlers(props) {\n            //bắt sự kiển select2 change\n            this.selector.on('change', this.onSelect2Change);\n            //bắt sự kiển select2 select\n            this.selector.on(\"select2:select\", this.onSelect2Select);\n            //bắt sự kiển select2 unselect\n            this.selector.on('select2:unselect', this.onSelect2Unselect);\n            //bắt sự kiển select2 đóng dropdowlist\n            this.selector.on('select2:close', this.onSelect2Close);\n        }\n    }, {\n        key: 'detachEventHandlers',\n        value: function detachEventHandlers() {\n            //off kiển select2 change\n            this.selector.off('change');\n            //off kiển select2 select\n            this.selector.off(\"select2:select\");\n            //off kiển select2 unselect\n            this.selector.off('select2:unselect');\n            //off kiển select2 đóng dropdowlist\n            this.selector.off('select2:close');\n        }\n    }, {\n        key: 'updateSelect2Value',\n        value: function updateSelect2Value(value) {\n            //off sự kiện change trước sau đó đăng ký lại\n            if (!this.state.options || this.state.options.length <= 0) {\n                return;\n            } else {\n                this.selector.val(value).trigger('change');\n            }\n        }\n    }, {\n        key: 'updateValue',\n        value: function updateValue() {\n            this.updateSelect2Value(this.state.selectedValue);\n            this.forceUpdateValue = false;\n        }\n        /**\n         * @description Lấy giá trị selected sử dụng cho trường hợp sử dụng select 2 jquery\n         * @author Luyen Nguyen 2018-10-07\n         */\n\n        /**\n         * @description Lấy giá trị unselect\n         * @author Luyen Nguyen 2018-10-07\n         */\n\n        /**\n         * @description Lấy object selected\n         * @author Luyen Nguyen 2018-10-07\n         */\n\n        /**\n        * @description Lấy object selected\n        * @author Luyen Nguyen 2018-10-07\n        */\n\n    }, {\n        key: 'select2Config',\n\n        /**\n        * @description Cấu hình các param cho select2\n        * @author Luyen Nguyen 2018-10-07\n        */\n        value: function select2Config() {\n            var _props = this.props,\n                isAjax = _props.isAjax,\n                allowClear = _props.allowClear,\n                allowSearch = _props.allowSearch,\n                allowCheckbox = _props.allowCheckbox,\n                hiddenSelection = _props.hiddenSelection,\n                placeholderId = _props.placeholderId,\n                placeholderText = _props.placeholderText,\n                options = _props.options;\n\n            return {\n                placeholder: {\n                    id: placeholderId ? placeholderId : \"\",\n                    text: !placeholderText ? trans.translate('common.all') : placeholderText\n                },\n                data: options,\n                dropdownCssClass: allowCheckbox ? 'select2-dropdown-checkbox' : '',\n                containerCssClass: hiddenSelection ? 'fls-hidden-selection' : '',\n                closeOnSelect: allowCheckbox ? false : true,\n                allowClear: !allowClear ? false : true,\n                minimumResultsForSearch: allowSearch ? null : Infinity,\n                ajax: isAjax ? this.ajaxConfig() : null\n            };\n        }\n        /**\n        * @description Cấu hình các param khi sử dụng ajax\n        * @author Luyen Nguyen 2018-10-07\n        */\n\n    }, {\n        key: 'ajaxConfig',\n        value: function ajaxConfig() {\n            var _url = this.props.url;\n\n            var self = this;\n            var http = new flHttp(false);\n            var setHeader = http.setHeader(_Constants2.default.METHOD.POST, _Constants2.default.CONTENT_TYPE.json);\n            // const API_LINK = process.api_host || Constants.API_HOST;\n            var protocol = location.protocol;\n            var API_HOST = 'api.nextwavemonitoring.com' || false;\n            var API_HTTP_PORT =  false || _Constants2.default.API_HTTP_PORT;\n            var API_HTTPS_PORT = process.api_https_port || _Constants2.default.API_HTTPS_PORT;\n            if (protocol == 'https:') {\n                _url = protocol + \"//\" + API_HOST + \":\" + API_HTTPS_PORT + \"/\";\n            } else {\n                _url = protocol + \"//\" + API_HOST + \":\" + API_HTTP_PORT + \"/\";\n            }\n            return {\n                url: function url() {\n                    return _url + self.props.url;\n                },\n                headers: setHeader.headers,\n                dataType: 'json',\n                data: function data(prs) {\n                    var def = {\n                        name: '',\n                        headquarter_id: setHeader.headers.headquarter,\n                        lang: setHeader.headers.lang\n\n                    };\n                    var newParams = $.extend(def, self.props.params ? self.props.params : {});\n                    newParams.name = $.trim(prs.term);\n                    return newParams;\n                },\n                processResults: function processResults(req) {\n                    if (req.status) {\n                        var dataList = req.data;\n                        if (self.props.defaultOptionName && dataList && dataList.length > 0) {\n                            var defaultOption = [{\n                                id: self.props.defaultOptionId ? self.props.defaultOptionId : \"-1\",\n                                text: self.props.defaultOptionName\n                            }];\n                            dataList = defaultOption.concat(dataList);\n                        }\n                        return { results: dataList };\n                    } else {\n                        return { results: [] };\n                    }\n                },\n                cache: false\n            };\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            var _this2 = this;\n\n            var _props2 = this.props,\n                children = _props2.children,\n                className = _props2.className,\n                Tag = _props2.tag,\n                label = _props2.label,\n                selectedValue = _props2.selectedValue,\n                placeholderId = _props2.placeholderId,\n                placeholderText = _props2.placeholderText,\n                defaultOptionId = _props2.defaultOptionId,\n                defaultOptionName = _props2.defaultOptionName,\n                allowClear = _props2.allowClear,\n                allowSearch = _props2.allowSearch,\n                allowCheckbox = _props2.allowCheckbox,\n                hiddenSelection = _props2.hiddenSelection,\n                isAjax = _props2.isAjax,\n                url = _props2.url,\n                params = _props2.params,\n                onChange = _props2.onChange,\n                onSelectChange = _props2.onSelectChange,\n                onSelect = _props2.onSelect,\n                onUnselect = _props2.onUnselect,\n                onSelectClose = _props2.onSelectClose,\n                attributes = _objectWithoutProperties(_props2, ['children', 'className', 'tag', 'label', 'selectedValue', 'placeholderId', 'placeholderText', 'defaultOptionId', 'defaultOptionName', 'allowClear', 'allowSearch', 'allowCheckbox', 'hiddenSelection', 'isAjax', 'url', 'params', 'onChange', 'onSelectChange', 'onSelect', 'onUnselect', 'onSelectClose']);\n            //set class name to tag\n\n\n            var classes = (0, _classnames2.default)('form-control', className);\n            return _react2.default.createElement(\n                _react2.default.Fragment,\n                null,\n                this.props.label != \"\" && typeof this.props.label != 'undefined' ? _react2.default.createElement(\n                    'label',\n                    { className: 'control-label' },\n                    trans.translate(this.props.label),\n                    this.props.required == 'required' ? _react2.default.createElement(\n                        'span',\n                        { className: 'required' },\n                        '*'\n                    ) : null\n                ) : null,\n                _react2.default.createElement(Tag, _extends({}, attributes, { ref: function ref(ele) {\n                        return _this2.selector = $(ele);\n                    }, disabled: this.props.disabled, className: classes }))\n            );\n        }\n    }], [{\n        key: 'getDerivedStateFromProps',\n        value: function getDerivedStateFromProps(nextProps, prevState) {\n            var nextState = null;\n            if (JSON.stringify(nextProps.selectedValue) !== JSON.stringify(prevState.selectedValue)) {\n                nextState = { selectedValue: nextProps.selectedValue, valueChanged: true };\n            }\n            if (JSON.stringify(nextProps.options) !== JSON.stringify(prevState.options)) {\n                nextState = _extends({}, nextState, { options: nextProps.options, optionsChanged: true });\n            }\n\n            return nextState;\n        }\n    }]);\n\n    return FLSelect;\n}(_react2.default.Component);\n\nFLSelect.propTypes = {\n    tag: _propTypes2.default.oneOfType([_propTypes2.default.func, _propTypes2.default.string]),\n    className: _propTypes2.default.string,\n    allowClear: _propTypes2.default.bool,\n    allowSearch: _propTypes2.default.bool,\n    allowCheckbox: _propTypes2.default.bool,\n    hiddenSelection: _propTypes2.default.bool,\n    placeholderText: _propTypes2.default.string,\n    defaultOptionName: _propTypes2.default.string,\n    onChange: _propTypes2.default.func,\n    onSelectChange: _propTypes2.default.func,\n    onSelect: _propTypes2.default.func,\n    onUnselect: _propTypes2.default.func,\n    onSelectClose: _propTypes2.default.func,\n    isAjax: _propTypes2.default.bool,\n    url: _propTypes2.default.string\n};\nFLSelect.defaultProps = {\n    tag: 'select'\n};\nexports.default = FLSelect;\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../node_modules/process/browser.js */ \"8oxB\")))\n\n//# sourceURL=webpack:///./src/component/FLSelect.js?");

/***/ })

}]);