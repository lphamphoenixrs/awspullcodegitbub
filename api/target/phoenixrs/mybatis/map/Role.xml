<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="Role">
	<resultMap id="RoleMap" type="com.phoenixrs.api.entities.RoleEntity">
  			<result property="id" column="id" />
  			<result property="name" column="name" />
  			<result property="description" column="description" />
  			<result property="status" column="status" />
  			<result property="is_delete" column="is_delete" />
  			<result property="created_date" column="created_date" />
  			<result property="created_by" column="created_by" />
  			<result property="updated_date" column="updated_date" />
  			<result property="updated_by" column="updated_by" />
  			<result property="order_by" column="order_by" />
			<result property="sort_by" column="sort_by" />
			<result property="limit" column="limit" />
			<result property="offset" column="offset" />
	</resultMap>
	
	<resultMap id="ScreenMap" type="com.phoenixrs.api.entities.ScreenEntity">
  			<result property="id" column="id" />
  			<result property="screen_name" column="screen_name" />
  			<result property="level" column="level" />
  			<result property="parent" column="parent" />
  			<result property="path" column="path" />
  			<result property="has_child" column="has_child" />
  			<result property="status" column="status" />
  			<result property="is_delete" column="is_delete" />
  			<result property="created_date" column="created_date" />
  			<result property="created_by" column="created_by" />
  			<result property="updated_date" column="updated_date" />
  			<result property="updated_by" column="updated_by" />
  			<result property="order_by" column="order_by" />
			<result property="sort_by" column="sort_by" />
			<result property="limit" column="limit" />
			<result property="offset" column="offset" />
	</resultMap>	
		
	<select id="getList" resultMap="RoleMap" >
		SELECT * FROM `role` 	
		    order by
	        <choose>  
	            <when test="order_by == 'id'">
	                id ${sort_by}
	            </when>         
	            <when test="order_by == 'name'">
	                name ${sort_by}
	            </when>
	            <otherwise>
			      id DESC
			    </otherwise>                                                  
	        </choose>  
		 	 
		 LIMIT ${limit} OFFSET ${offset};
	</select>
	
	<select id="getListCount"  resultType="int" parameterType="com.phoenixrs.api.entities.RoleEntity">
    	SELECT count(*) as totalRecord
		FROM role;
  	</select>
  	
  	
  	<update id="updateStatus">
		UPDATE `role`
		SET
			`status` = #{status}
		WHERE
			`id` = #{id}
	</update>
	
	
	<insert id="insertRole" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO `role`(
			`name`,
			`description`
		)VALUES(
			#{name},
			#{description}
		);
		<selectKey keyProperty="id" resultType="int">
	        SELECT 
	        LAST_INSERT_ID() as id
        </selectKey>
	</insert>
	
	<update id="updateRole">
		UPDATE `role`
		SET
			`name` = #{name},
			description = #{description}
		WHERE
			`id` = #{id}
	</update>
	
	<update id="deleteRole">
		UPDATE `role`
		SET
			`is_delete` = #{is_delete}
		WHERE
			`id` = #{id}
	</update>
	
	
	<select id="getListScreenPermission" resultType="Map" >
		SELECT
			s.id,
			s.has_child,
			s.id AS id_screen,
			s.screen_name,
			s.`level`,
			s.parent,
			s.path,
			rcs.auths,
			rcs.id_role,
			0 AS collapse,
			(IFNULL(rcs.auths,0) <![CDATA[&]]> 1) AS `view`,
			(IFNULL(rcs.auths,0) <![CDATA[&]]> 2) AS `new`,
			(IFNULL(rcs.auths,0) <![CDATA[&]]> 4) AS `delete`,
			(IFNULL(rcs.auths,0) <![CDATA[&]]> 8) AS `edit`,
			(IFNULL(rcs.auths,0) <![CDATA[&]]> 16) AS `excel`,
			(IFNULL(rcs.auths,0) <![CDATA[&]]> 32) AS `pdf`,
			(IFNULL(rcs.auths,0) <![CDATA[&]]> 64) AS `print`, 
			(IFNULL(rcs.auths,0) <![CDATA[&]]> 128) AS `translate`,
			(IFNULL(rcs.auths,0) <![CDATA[&]]> 256) AS `approval`
		FROM
			screen s
			LEFT JOIN role_screen_map rcs ON rcs.id_screen = s.id 
		WHERE
			s.`status` = 1 
			AND s.is_delete = 0 
			AND rcs.id_role = #{id}
			<if test="type == 'level0'">
				AND s.parent IS NULL
			</if>

			<if test="id_screen != null and id_screen != 0">
				AND s.parent = #{id_screen}
			</if>
			
			
		ORDER BY
			s.`level` ASC
	</select>
	
	<select id="getAllRole" resultMap="RoleMap" >
		SELECT t.*, 0 as is_checked FROM `role` t;
	</select>
	
	<select id="checkRoleScreenMapExist" resultType="int" parameterType="com.phoenixrs.api.entities.RoleScreenMapEntity" >
		SELECT COUNT(*) AS totalRecord FROM `role_screen_map` WHERE id_screen = #{id_screen} AND id_role = #{id_role};
	</select>
	
	
	<update id="updateRoleScreenMap">
		UPDATE `role_screen_map`
		SET
			`auths` = #{auths}
		WHERE
			id_screen = #{id_screen} AND id_role = #{id_role}
	</update>
	
	<insert id="insertRoleScreenMap">
		INSERT INTO `role_screen_map`(
			`id_role`,
			`id_screen`,
			`auths`
		)VALUES(
			#{id_role},
			#{id_screen},
			#{auths}
		);
	</insert>
	
	<select id="getAllScreen" resultMap="ScreenMap" >
		SELECT t.* FROM `screen` t WHERE `status` = 1 AND is_delete = 0;
	</select>
	
</mapper>